{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/orbit-counts/orbit-counts.component.html","./src/app/orbit-list/orbit-list.component.html","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/orbit-counts/orbit-counts.component.css","./src/app/orbit-counts/orbit-counts.component.ts","./src/app/orbit-list/orbit-list.component.css","./src/app/orbit-list/orbit-list.component.ts","./src/app/satellite.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<h1>Orbit Report</h1>\\r\\n\\r\\n<div class=\\\"search-form\\\">\\r\\n\\t<app-orbit-list [satellites]=\\\"displayList\\\"></app-orbit-list>\\r\\n\\tSearch: <input #searchTerm type=\\\"text\\\" (keyup.enter)=\\\"search(searchTerm.value);\\\" name=\\\"searchTerm\\\"/>\\r\\n\\t<span>\\r\\n\\t\\tMethod: \\r\\n\\t\\t<select name=\\\"searchType\\\">\\r\\n\\t\\t\\t<option value=\\\"name\\\">By Name</option>\\r\\n\\t\\t\\t<option value=\\\"orbit\\\">By Orbit Type</option>\\r\\n\\t\\t\\t<option value=\\\"type\\\">By Type</option>\\r\\n\\t\\t</select>\\r\\n\\t</span>\\r\\n\\t<button (click)=\\\"search(searchTerm.value);\\\">Search</button>\\r\\n</div>\\r\\n\\r\\n<app-orbit-counts [satellites]=\\\"displayList\\\"  [typeList]=\\\"typeList\\\"></app-orbit-counts>\\r\\n\\r\\n<!-- TODO 1: add list component to app HTML -->\"","module.exports = \"<h3>Satellite Count:</h3>\\r\\n<div class=\\\"counts\\\">\\r\\n\\t<div>Total: <span class=\\\"counts-total\\\">{{satellites.length}}</span></div>\\r\\n\\t\\r\\n\\t<div *ngFor=\\\"let item of typeList\\\">{{item}}: \\r\\n\\t\\t<span>\\r\\n\\t\\t\\t{{getTypeLength(item)}}\\r\\n\\t\\t</span>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<!-- TODO 4: add logic to count number of satellites displayed -->\\r\\n\"","module.exports = \"<table (click)=\\\"print()\\\">\\r\\n    <tr class=\\\"header-row\\\">\\r\\n        <th (click)=\\\"sort('name')\\\" class=\\\"sortable\\\">Name</th>\\r\\n        <th (click)=\\\"sort('type')\\\" class=\\\"sortable\\\">Type</th>\\r\\n        <th>Operational</th>\\r\\n        <th>Orbit Type</th>\\r\\n        <th>Launch Date</th>\\r\\n    </tr>\\r\\n\\r\\n    <tr class=\\\"data-row\\\" *ngFor=\\\"let item of satellites\\\" [class.evenRoll]=\\\"satellites.indexOf(item) % 2 === 0\\\">\\r\\n        <td>{{item.name}}</td>\\r\\n        <td [class.warning]=\\\"item.isSpaceDebris()\\\">{{item.type}}</td>\\r\\n        <td>{{item.operational}}</td>\\r\\n        <td>{{item.orbitType}}</td>\\r\\n        <td>{{item.launchDate}}</td>\\r\\n    </tr>\\r\\n</table>\\r\\n\\r\\n<!-- TODO 2b: use *ngFor to display satellite data in the table -->\\r\\n<!-- TODO 3b: add style directive to conditionally highlight satellite type -->\\r\\n\\r\\n\"","module.exports = \".search-form {\\r\\n\\tmargin-bottom: 40px;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n\\tmargin-left: 10px;\\r\\n\\tcolor: #fff;\\r\\n\\tbackground-color: #009b25;\\r\\n\\tborder-radius: 4px;\\r\\n\\tpadding: 2px 5px;\\r\\n\\tfont-size: 18px;\\r\\n\\tcursor: pointer;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxtQkFBbUI7QUFDcEI7O0FBRUE7Q0FDQyxpQkFBaUI7Q0FDakIsV0FBVztDQUNYLHlCQUF5QjtDQUN6QixrQkFBa0I7Q0FDbEIsZ0JBQWdCO0NBQ2hCLGVBQWU7Q0FDZixlQUFlO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VhcmNoLWZvcm0ge1xyXG5cdG1hcmdpbi1ib3R0b206IDQwcHg7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcblx0bWFyZ2luLWxlZnQ6IDEwcHg7XHJcblx0Y29sb3I6ICNmZmY7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogIzAwOWIyNTtcclxuXHRib3JkZXItcmFkaXVzOiA0cHg7XHJcblx0cGFkZGluZzogMnB4IDVweDtcclxuXHRmb250LXNpemU6IDE4cHg7XHJcblx0Y3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiJdfQ== */\"","import { Component } from '@angular/core';\r\nimport { Satellite } from './satellite';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'orbit-report';\r\n\r\n  sourceList: Satellite[];\r\n  displayList: Satellite[];\r\n  typeList: string [];\r\n\r\n\tconstructor() {\r\n\t\tthis.sourceList = [];\r\n\t\tthis.displayList = [];\r\n\t\tlet satellitesUrl = 'https://handlers.education.launchcode.org/static/satellites.json';\r\n\r\n\t\twindow.fetch(satellitesUrl).then(function (response) {\r\n\t\t\tresponse.json().then(function (data) {\r\n\r\n\t\t\t\tlet fetchedSatellites = data.satellites;\r\n\t\t\t\t// loop over satellites\r\n\t\t\t\tfor(let i=0; i < fetchedSatellites.length; i++) {\r\n\t\t\t\t\t// create a Satellite object \r\n\t\t\t\t\tlet satellite = new Satellite(fetchedSatellites[i].name, fetchedSatellites[i].type, fetchedSatellites[i].launchDate, fetchedSatellites[i].orbitType, fetchedSatellites[i].operational);\r\n\t\t\t\t\t// add the new Satellite object to sourceList \r\n\t\t\t\t\tthis.sourceList.push(satellite);\r\n\t\t\t\t }\r\n\r\n\t\t\t\t // make a copy of the sourceList to be shown to the user\r\n\t\t\t\t this.displayList = this.sourceList.slice(0);\r\n\r\n\t\t\t\t this.getAllTypes()\r\n\t  \r\n\t\t\t}.bind(this));\r\n\t\t}.bind(this));\r\n\r\n\t\t\r\n\t}\r\n\r\n\tsearch(searchTerm: string): void {\r\n\r\n\t\tlet searchType = document.querySelector(\"select\").value;\r\n\t\tlet matchingSatellites: Satellite[] = [];\r\n\t\tsearchTerm = searchTerm.toLowerCase();\r\n\r\n\t\tif (searchType === 'name') {\r\n\t\t\t// console.log(\"name running\");\r\n\t\t\tfor(let i = 0; i < this.sourceList.length; i++) {\r\n\r\n\t\t\t\tlet name = this.sourceList[i].name.toLowerCase();\r\n\t\r\n\t\t\t\tif (name.indexOf(searchTerm) >= 0) {\r\n\t\t\t\t\tmatchingSatellites.push(this.sourceList[i]);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (searchType === 'orbit') {\r\n\t\t\tfor (let i = 0; i < this.sourceList.length; i++) {\r\n\r\n\t\t\t\tlet orbitType = this.sourceList[i].orbitType.toLowerCase();\r\n\t\r\n\t\t\t\tif (orbitType.indexOf(searchTerm) >= 0) {\r\n\t\t\t\t\tmatchingSatellites.push(this.sourceList[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (searchType === \"type\") {\r\n\t\t\tfor (let i = 0; i < this.sourceList.length; i++) {\r\n\r\n\t\t\t\tlet type = this.sourceList[i].type.toLowerCase();\r\n\t\r\n\t\t\t\tif (type.indexOf(searchTerm) >= 0) {\r\n\t\t\t\t\tmatchingSatellites.push(this.sourceList[i]);\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (searchType === \"\") matchingSatellites = this.displayList \r\n\t\t// assign this.displayList to be the array of matching satellites\r\n\t\t// this will cause Angular to re-make the table, but now only containing matches\r\n\t\tthis.displayList = matchingSatellites;\r\n\t}\r\n\r\n\tgetAllTypes(): void {\r\n\t\tlet resultArr = []\r\n\t\tlet sourceLength = this.sourceList.length;\r\n\r\n\t\tfor (let i = 0; i < sourceLength ; i++) {\r\n\r\n\t\t\tif ( !resultArr.includes(this.sourceList[i].type) ) {\r\n\t\t\t\tresultArr.push(this.sourceList[i].type);\r\n\t\t\t} \r\n\r\n\t\t}\r\n\r\n\t\tthis.typeList = resultArr;\r\n\t}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { OrbitListComponent } from './orbit-list/orbit-list.component';\r\nimport { OrbitCountsComponent } from './orbit-counts/orbit-counts.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    OrbitListComponent,\r\n    OrbitCountsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".counts {\\r\\n\\tbackground: #34495E;\\r\\n\\tcolor: #fff;\\r\\n\\tborder-radius: 5px;\\r\\n\\twidth: 225px;\\r\\n}\\r\\n\\r\\n.counts div {\\r\\n\\tpadding: 8px;\\r\\n}\\r\\n\\r\\n.counts span {\\r\\n\\tfloat: right;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3JiaXQtY291bnRzL29yYml0LWNvdW50cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsbUJBQW1CO0NBQ25CLFdBQVc7Q0FDWCxrQkFBa0I7Q0FDbEIsWUFBWTtBQUNiOztBQUVBO0NBQ0MsWUFBWTtBQUNiOztBQUVBO0NBQ0MsWUFBWTtBQUNiIiwiZmlsZSI6InNyYy9hcHAvb3JiaXQtY291bnRzL29yYml0LWNvdW50cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvdW50cyB7XHJcblx0YmFja2dyb3VuZDogIzM0NDk1RTtcclxuXHRjb2xvcjogI2ZmZjtcclxuXHRib3JkZXItcmFkaXVzOiA1cHg7XHJcblx0d2lkdGg6IDIyNXB4O1xyXG59XHJcblxyXG4uY291bnRzIGRpdiB7XHJcblx0cGFkZGluZzogOHB4O1xyXG59XHJcblxyXG4uY291bnRzIHNwYW4ge1xyXG5cdGZsb2F0OiByaWdodDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Satellite } from '../satellite';\r\n\r\n@Component({\r\n  selector: 'app-orbit-counts',\r\n  templateUrl: './orbit-counts.component.html',\r\n  styleUrls: ['./orbit-counts.component.css']\r\n})\r\nexport class OrbitCountsComponent implements OnInit {\r\n\r\n\t@Input() satellites: Satellite[];\r\n\t@Input() typeList: string[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  countByType(type: string): number {\r\n\tlet count = 0;\r\n\tif (this.satellites) {\r\n\t  for (let i = 0; i < this.satellites.length; i++) {\r\n\t\t if (this.satellites[i].type === type) {\r\n\t\t\tcount++;\r\n\t\t }\r\n\t  }\r\n\t}\r\n\treturn count;\r\n }\r\n\r\n  getTypeLength(type: string): number {\r\n\t\tlet result: number = 0;\r\n\t\tresult = this.satellites.filter(obj => obj[\"type\"] === type).length;\r\n\t\treturn result;\r\n  }\r\n\r\n}","module.exports = \".sortable {\\r\\n\\tcursor: pointer;\\r\\n\\tcolor: #dd5;\\r\\n}\\r\\n\\r\\n.warning {\\r\\n\\tbackground-color: #da8a8a;\\r\\n}\\r\\n\\r\\ntable {\\r\\n color: #111;\\r\\n border-radius: 5px;\\r\\n overflow: hidden;\\r\\n margin: 12px 0;\\r\\n min-width: 300px;\\r\\n background: #dad8d8;\\r\\n}\\r\\n\\r\\n.header-row {\\r\\n\\tbackground: #34495E;\\r\\n\\tcolor: #fff\\r\\n}\\r\\n\\r\\nth, td {\\r\\n\\ttext-align: left;\\r\\n\\tmargin: 5px 10px;\\r\\n\\tpadding: 6px;\\r\\n}\\r\\n\\r\\n.evenRoll {\\r\\n\\tbackground-color: rgb(153, 214, 103);\\r\\n}\\r\\n\\r\\n.oddRoll {\\r\\n\\tbackground-color: rgb(171, 179, 169);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3JiaXQtbGlzdC9vcmJpdC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxlQUFlO0NBQ2YsV0FBVztBQUNaOztBQUVBO0NBQ0MseUJBQXlCO0FBQzFCOztBQUVBO0NBQ0MsV0FBVztDQUNYLGtCQUFrQjtDQUNsQixnQkFBZ0I7Q0FDaEIsY0FBYztDQUNkLGdCQUFnQjtDQUNoQixtQkFBbUI7QUFDcEI7O0FBRUE7Q0FDQyxtQkFBbUI7Q0FDbkI7QUFDRDs7QUFFQTtDQUNDLGdCQUFnQjtDQUNoQixnQkFBZ0I7Q0FDaEIsWUFBWTtBQUNiOztBQUVBO0NBQ0Msb0NBQW9DO0FBQ3JDOztBQUVBO0NBQ0Msb0NBQW9DO0FBQ3JDIiwiZmlsZSI6InNyYy9hcHAvb3JiaXQtbGlzdC9vcmJpdC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc29ydGFibGUge1xyXG5cdGN1cnNvcjogcG9pbnRlcjtcclxuXHRjb2xvcjogI2RkNTtcclxufVxyXG5cclxuLndhcm5pbmcge1xyXG5cdGJhY2tncm91bmQtY29sb3I6ICNkYThhOGE7XHJcbn1cclxuXHJcbnRhYmxlIHtcclxuIGNvbG9yOiAjMTExO1xyXG4gYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gb3ZlcmZsb3c6IGhpZGRlbjtcclxuIG1hcmdpbjogMTJweCAwO1xyXG4gbWluLXdpZHRoOiAzMDBweDtcclxuIGJhY2tncm91bmQ6ICNkYWQ4ZDg7XHJcbn1cclxuXHJcbi5oZWFkZXItcm93IHtcclxuXHRiYWNrZ3JvdW5kOiAjMzQ0OTVFO1xyXG5cdGNvbG9yOiAjZmZmXHJcbn1cclxuXHJcbnRoLCB0ZCB7XHJcblx0dGV4dC1hbGlnbjogbGVmdDtcclxuXHRtYXJnaW46IDVweCAxMHB4O1xyXG5cdHBhZGRpbmc6IDZweDtcclxufVxyXG5cclxuLmV2ZW5Sb2xsIHtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTUzLCAyMTQsIDEwMyk7XHJcbn1cclxuXHJcbi5vZGRSb2xsIHtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTcxLCAxNzksIDE2OSk7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Satellite } from '../satellite';\r\n\r\n@Component({\r\n  selector: 'app-orbit-list',\r\n  templateUrl: './orbit-list.component.html',\r\n  styleUrls: ['./orbit-list.component.css']\r\n})\r\n\r\nexport class OrbitListComponent implements OnInit {\r\n\r\n  @Input() satellites: Satellite[];\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\tsort(column: string): void {\r\n\t\t// array.sort modifies the array, sorting the items based on the given compare function\r\n\t\tthis.satellites.sort(function (a: Satellite, b: Satellite): number {\r\n\t\t\tif (a[column] < b[column]) {\r\n\t\t\t\treturn -1;\r\n\t\t\t} else if (a[column] > b[column]) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t});\r\n\t}\r\n\r\n\tprint() {\r\n\t\tconsole.log(this.satellites.filter(obj => obj[\"type\"] === \"Probe\"));\r\n\t\t// {{( satellites.filter(obj => obj[\"type\"] === item) )}}\r\n\t}\r\n\t\t\r\n}\r\n","export class Satellite {\r\n\r\n\tname: string;\r\n\ttype: string;\r\n\tlaunchDate: string;\r\n\torbitType: string;\r\n\toperational: boolean;\r\n\r\n\tconstructor(name: string, type: string, launchDate: string, orbitType: string, operational: boolean) {\r\n\t\tthis.name = name;\r\n\t\tthis.type = type;\r\n\t\tthis.launchDate = launchDate;\r\n\t\tthis.orbitType = orbitType;\r\n\t\tthis.operational = operational;\r\n   }\r\n\t\r\n\tisSpaceDebris(): boolean {\r\n    \tif (this.type === \"Space Debris\") return true;\r\n\t\treturn false;\r\n   }\r\n\r\n}\r\n\r\n// TODO 3a: fix isSpaceDebris check\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}